import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '../styles/Home.module.css'
import Sidebar from '../components/Sidebar'
import Feed from '../components/Feed'
import { getProviders, getSession, useSession } from 'next-auth/react'
import Login from '../components/Login'
import Modal from '../components/Modal'
import { useRecoilState } from "recoil";
import { modalState, postIdState, userState } from "../Atom/modalAtom";
import Widjets from '../components/Widjets'
import { db, storage } from '../firebase';
import {addDoc,collection,doc,getDoc,getDocs,serverTimestamp,updateDoc} from "@firebase/firestore";
import { onSnapshot, orderBy, query } from 'firebase/firestore';
import { useEffect, useState } from 'react'
import User from '../components/User'
import Profile from '../components/Profile'

const inter = Inter({ subsets: ['latin'] })

export default function Home({ trendingResults, followResults, providers }) {
  const { data: session } = useSession();
  const [isOpen,setIsOpen] = useRecoilState(modalState);
  const[user,setUser]=useRecoilState(userState)
  // console.log('provider',providers)
  // console.log('session',session)
  const [users,setUsers]=useState([]);

  console.log('ses',session)
  async function addUser(){
     await addDoc(collection(db, "users"), {
        email:session.user.email,
        image:session.user.image,
        name:session.user.name,
        tag:session.user.tag,
        id:session.user.uid,
        timestamp: serverTimestamp(),
    });
    getUsers();
  }
  async function getUsers(){
    const userRef = collection(db, "users",);
    
    getDocs(userRef).then((snapshot)=>{
      // console.log('snapshot.docs',snapshot.docs)
      let value=[]
      snapshot.docs.forEach((doc)=>{
        value.push({...doc.data(),id:doc.id})
      })
      // console.log('value',value)
      const usercheck = value?.filter(filteredusers =>filteredusers.email.includes(`${session?.user?.email}`))
      // console.log('check',usercheck)
     if(usercheck[0]){
      // console.log('success')
      return setUser(usercheck[0]);
     }  else {
      return addUser();
     }
    })
    
   }
  
  // useEffect(()=>{
    
  // },[session])
  
    console.log('user',user)
    // console.log('users',users)
  if (!session) return <Login providers={providers} />;
  return (
    <>
      <Head>
        <title>Chirper</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className='bg-black min-h-screen flex max-w-1515px mx-auto'>
      <Sidebar/>
      <Profile/>
      <div>
        <button className='px-2 bg-orange-400' onClick={getUsers}>Heyyy</button>
      </div>
        
        {isOpen ? <Modal /> : ''}
        {/* <div className=' font-extrabold'>
          {users.map((youser)=>{
            <User key={youser.id} user={youser.data()}/>
          })}
          
        </div> */}
        
      </main>
    </>
  )
}

export async function getServerSideProps(context) {
  // const trendingResults = await fetch("https://jsonkeeper.com/b/NKEV").then(
  //   (res) => res.json()
  // );
  // const followResults = await fetch("https://jsonkeeper.com/b/WWMJ").then(
  //   (res) => res.json()
  // );
  const trendingResults ='dnj';
  const followResults='2dc'
  const providers = await getProviders();
  const session = await getSession(context);

  return {
    props: {trendingResults,followResults,providers,session}
  };
}

